name: docker-light-images - test  # soup-msa-service CICD
on:
  push:
    branches:
      - test/docker-light-image

env:
  ADMIN_REPOSITORY: soup-admin-backend  # ECR 생성 필요
  MEMBER_REPOSITORY: soup-member-backend  # ECR 생성 필요
  SEARCH_REPOSITORY: soup-search-backend  # ECR 생성 필요
jobs:
  build-and-push-image:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        id: login-dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: BUILD soup-msa-service images and push image to dockerhub
        id: soup-msa-service_build
        env:
          REGISTRY: ${{ steps.login-dockerhub.outputs.registry }}
          ADMIN_REPOSITORY: ${{ env.ADMIN_REPOSITORY }}
          MEMBER_REPOSITORY: ${{ env.MEMBER_REPOSITORY }}
          SEARCH_REPOSITORY: ${{ env.SEARCH_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          ./gradlew clean
          ./gradlew build 
          cd soup-admin-service
          docker build -t $REGISTRY/$ADMIN_REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$ADMIN_REPOSITORY:$IMAGE_TAG
          cd ../soup-member-service
          docker build -t $REGISTRY/$MEMBER_REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$MEMBER_REPOSITORY:$IMAGE_TAG
          cd ../soup-search-service
          docker build -t $REGISTRY/$SEARCH_REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$SEARCH_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$REGISTRY/$ADMIN_REPOSITORY:$IMAGE_TAG"
          echo "::set-output name=image::$REGISTRY/$MEMBER_REPOSITORY:$IMAGE_TAG"
          echo "::set-output name=image::$REGISTRY/$SEARCH_REPOSITORY:$IMAGE_TAG"
